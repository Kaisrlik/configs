# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

setopt HIST_IGNORE_ALL_DUPS

# Path to your oh-my-zsh installation.
  export ZSH=~/.oh-my-zsh
  export SCONSFLAGS="-Q -u -j$(nproc)"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="xeri"

# XDG env variables
XDG_CURRENT_DESKTOP="sway"

# Enable colors and change prompt:
autoload -U colors && colors
autoload -U promptinit && promptinit -u

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

DISABLE_UPDATE_PROMPT=true
DISABLE_AUTO_UPDATE=true

if false; then
    autoload -U compinit && compinit -u

#     # set completion colors to be the same as `ls`, after theme has been loaded
#     [[ -z "$LS_COLORS" ]] || zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
    zstyle ':completion:*' menu select
    # Auto complete with case insenstivity
    zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

    zmodload zsh/complist
    # Include hidden files.
    _comp_options+=(globdots)

    source ~/.oh-my-zsh/lib/git.zsh
    # Load git aliases
    source ~/.oh-my-zsh/plugins/git/git.plugin.zsh
    source ~/.oh-my-zsh/plugins/gitfast/gitfast.plugin.zsh
    source ~/devel/configs/omzsh.configs/xeri.zsh-theme
else
    plugins=(git gitfast)
    source $ZSH/oh-my-zsh.sh
fi
# load autocompletition for zsh
fpath=('/usr/local/share/zsh/functions/Completion/Unix/' $fpath)

# fzf
[[ $- == *i* ]] && source "${HOME}/.vim/bundle/fzf-app/shell/key-bindings.zsh"
source "${HOME}/.vim/bundle/fzf-app/shell/completion.zsh"

# so as not to be disturbed by Ctrl-S ctrl-Q in terminals
stty -ixon

# Start blinking
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

# User configuration
export TERM=xterm-256color

# export MANPATH="/usr/local/man:$MANPATH"
export PATH="$PATH:${HOME}/devel/configs/handy-scripts/"

systemctl --user import-environment DISPLAY

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Aliases
alias vim="nvim"
alias gdiff="git diff --no-index"
alias apt-get="sudo apt-get "
alias apt="sudo apt "
alias gitcontains="git branch --contains "
alias gnome-cc="env XDG_CURRENT_DESKTOP=GNOME gnome-control-center"
alias dd="dd status=progress"
alias ccscope="find -not -path '*/.ccls-cache/*' -name '*.[chxsS]' -print > cscope.files; cscope -b -q -k"
alias cctags="ctags --exclude=.ccls-cache --exclude=\"_b*\" --exclude=\"build*\" -R"
alias mail="neomutt"
alias v="nvim"
alias pdfview="evince"

alias llog="less -MN"
alias estrace="strace -f -ttT -s 200"
alias mstrace="strace -e brk,mmap,munmap,madvise -s200"
alias html="firefox"

alias psc="ps xawf -eo pid,user,cgroup,args"

# fzf
alias agf="ag --nobreak --nonumbers --noheading . | fzf"

# linux kernel
alias kernel-getml="git show HEAD | perl scripts/get_maintainer.pl --separator , --nokeywords --nogit --nogit-fallback --norolestats --nol"
alias kernel-checkspell="scripts/checkpatch.pl --strict --codespell"

# docker
dr() {
    docker run --env UID=$(id -u) --env GID=$(id -g) --rm=true -v $(pwd):/workdir -it $@
}

# Functions
clip() {
# Note: printf is magic to remove trailing new lines
   printf %s "$(cat $1)" | xclip -selection clipboard
}

cccls () {
	cmake -H. -BDebug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
	mv ./Debug/compile_commands.json .
	rm -rf ./Debug/
}

todolist() {
    (
    if [ $# -lt 2 ]; then
        echo "not enough args"
        echo "usage: $0 PROJECT_NAME some_strings"
        return
    fi
    local project=$1
    shift
    local task="- [ ] $@"
    local file=${HOME}/TODO/${project}.org
    if [ ! -f ${file} ]; then
        mkdir -p $(dirname ${file})
        echo "* TODO list ${project}\n" >> ${file}
    fi
    sed -i "2s;^;${task}\n;" ${file}
    )
}

# Send SIGSEGV to given app
sigkill() {
    ps | grep $1 | head -n 1 | awk '{print $1}' | xargs -r kill -SIGSEGV
}

check_certs_end() {
    ls $1 2>/dev/null 1>&2
    if [[ $? -ne 0 ]]; then
        return 0
    fi
    openssl x509 -enddate -checkend 2628000 -noout -in $1 1>/dev/null
    if [[ $? == 0 ]]; then
        return 0
    fi
    local date=$(date --date="$(openssl x509 -enddate -noout -in $1 | cut -d= -f 2)" \
        --iso-8601)
    echo "Expiration date of $1($2) in less than mounth: $date!"
    return 1
}

# avoid duplicate enrtries in hostory
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

# fzf sourcing
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# # map escape to capslock
# setxkbmap -option caps:escape

# nix specific
eval "$(direnv hook zsh)"

# company specific
[[ -f ~/devel/configs/intel.configs/zshrc ]] && source ~/devel/configs/intel.configs/zshrc

# vim settings
# /* vim: set tabstop=3 expandtab: */
